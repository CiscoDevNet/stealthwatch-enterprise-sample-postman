{
	"info": {
		"_postman_id": "8f8d57f0-8b92-4b8c-83ff-f0d4c853b452",
		"name": "Stealthwatch Enterprise - Reporting REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set(\"xsrf-token\", decodeURIComponent(pm.cookies.get(\"XSRF-TOKEN\")));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/token/v2/authenticate",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"token",
						"v2",
						"authenticate"
					]
				},
				"description": "Authenticate"
			},
			"response": []
		},
		{
			"name": "Get Domains (Tenants)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Tenant-id is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.length).to.be.above(0);",
							"    // set tenant-id to first value returned from tenants service",
							"    console.log(\"Setting 'tenant-id' to '\" + jsonData.data[0].id + \"'\");",
							"    pm.environment.set(\"tenant-id\", jsonData.data[0].id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					}
				],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Flows (Query)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"query-id\", jsonData.data.query.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var hoursBack = 24;",
							"",
							"var endTime = new Date();",
							"var startTime = new Date();",
							"startTime.setHours(endTime.getHours() - hoursBack);",
							"",
							"var endTimestamp = endTime.getUTCFullYear() + \"-\" + (\"0\" + (endTime.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + (endTime.getUTCDate())).slice(-2) + \"T\" + (\"0\" + (endTime.getUTCHours())).slice(-2) + \":\" + (\"0\" + (endTime.getUTCMinutes())).slice(-2) + \":\" + (\"0\" + (endTime.getUTCSeconds())).slice(-2) + \"Z\";",
							"var startTimestamp = startTime.getUTCFullYear() + \"-\" + (\"0\" + (startTime.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + (startTime.getUTCDate())).slice(-2) + \"T\" + (\"0\" + (startTime.getUTCHours())).slice(-2) + \":\" + (\"0\" + (startTime.getUTCMinutes())).slice(-2) + \":\" + (\"0\" + (startTime.getUTCSeconds())).slice(-2) + \"Z\";",
							"",
							"postman.setEnvironmentVariable(\"end-timestamp\", endTimestamp);",
							"postman.setEnvironmentVariable(\"start-timestamp\", startTimestamp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{xsrf-token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"startDateTime\": \"{{start-timestamp}}\",\n    \"endDateTime\": \"{{end-timestamp}}\",\n    \"recordLimit\": 500,\n    \"subject\": {\n        \"ipAddresses\": {\n            \"includes\": [\"10.201.3.154\"],\n            \"excludes\": []\n        },\n        \"hostGroups\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"username\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"macAddress\": {\n            \"includes\": [],\n            \"excludes\": []\n        }\n    },\n    \"peer\": {\n        \"ipAddresses\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"hostGroups\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"username\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"macAddress\": {\n            \"includes\": [],\n            \"excludes\": []\n        }\n    },\n    \"flow\": {\n        \"tcpUdpPorts\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"applications\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"flowDirection\": \"BOTH\",\n        \"byteCount\": [],\n        \"packetCount\": [],\n        \"payload\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"flowDataSource\": [],\n        \"protocol\": [],\n        \"includeInterfaceData\": false\n    }\n}"
				},
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v2/tenants/:tenant-id/flows/queries",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v2",
						"tenants",
						":tenant-id",
						"flows",
						"queries"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Flows (Status)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					}
				],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v2/tenants/:tenant-id/flows/queries/:query-id",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v2",
						"tenants",
						":tenant-id",
						"flows",
						"queries",
						":query-id"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						},
						{
							"key": "query-id",
							"value": "{{query-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Flows (Results)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					}
				],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v2/tenants/:tenant-id/flows/queries/:query-id/results",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v2",
						"tenants",
						":tenant-id",
						"flows",
						"queries",
						":query-id",
						"results"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						},
						{
							"key": "query-id",
							"value": "{{query-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Security Events (Query)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"query-id\", jsonData.data.searchJob.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var hoursBack = 24;",
							"",
							"var endTime = new Date();",
							"var startTime = new Date();",
							"startTime.setHours(endTime.getHours() - hoursBack);",
							"",
							"var endTimestamp = endTime.getUTCFullYear() + \"-\" + (\"0\" + (endTime.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + (endTime.getUTCDate())).slice(-2) + \"T\" + (\"0\" + (endTime.getUTCHours())).slice(-2) + \":\" + (\"0\" + (endTime.getUTCMinutes())).slice(-2) + \":\" + (\"0\" + (endTime.getUTCSeconds())).slice(-2) + \"Z\";",
							"var startTimestamp = startTime.getUTCFullYear() + \"-\" + (\"0\" + (startTime.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + (startTime.getUTCDate())).slice(-2) + \"T\" + (\"0\" + (startTime.getUTCHours())).slice(-2) + \":\" + (\"0\" + (startTime.getUTCMinutes())).slice(-2) + \":\" + (\"0\" + (startTime.getUTCSeconds())).slice(-2) + \"Z\";",
							"",
							"postman.setEnvironmentVariable(\"end-timestamp\", endTimestamp);",
							"postman.setEnvironmentVariable(\"start-timestamp\", startTimestamp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{xsrf-token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"timeRange\": {\n        \"from\": \"{{start-timestamp}}\",\n        \"to\": \"{{end-timestamp}}\"\n    },\n    \"hosts\": [\n    \t{\n\t\t\t\"ipAddress\": \"10.201.3.154\",\n\t\t\t\"type\": \"source\"\n\t\t}\n\t],\n    \"securityEventTypeIds\": []\n}"
				},
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants/:tenant-id/security-events/queries",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants",
						":tenant-id",
						"security-events",
						"queries"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Security Events (Status)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					}
				],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants/:tenant-id/security-events/queries/:query-id",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants",
						":tenant-id",
						"security-events",
						"queries",
						":query-id"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						},
						{
							"key": "query-id",
							"value": "{{query-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Security Events (Results)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					}
				],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants/:tenant-id/security-events/results/:query-id",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants",
						":tenant-id",
						"security-events",
						"results",
						":query-id"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						},
						{
							"key": "query-id",
							"value": "{{query-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Top Conversations (Query)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"query-id\", jsonData.data.queryId);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var hoursBack = 24;",
							"",
							"var endTime = new Date();",
							"var startTime = new Date();",
							"startTime.setHours(endTime.getHours() - hoursBack);",
							"",
							"var endTimestamp = endTime.getUTCFullYear() + \"-\" + (\"0\" + (endTime.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + (endTime.getUTCDate())).slice(-2) + \"T\" + (\"0\" + (endTime.getUTCHours())).slice(-2) + \":\" + (\"0\" + (endTime.getUTCMinutes())).slice(-2) + \":\" + (\"0\" + (endTime.getUTCSeconds())).slice(-2) + \".000\";",
							"var startTimestamp = startTime.getUTCFullYear() + \"-\" + (\"0\" + (startTime.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + (startTime.getUTCDate())).slice(-2) + \"T\" + (\"0\" + (startTime.getUTCHours())).slice(-2) + \":\" + (\"0\" + (startTime.getUTCMinutes())).slice(-2) + \":\" + (\"0\" + (startTime.getUTCSeconds())).slice(-2) + \".000\";",
							"",
							"postman.setEnvironmentVariable(\"end-timestamp\", endTimestamp);",
							"postman.setEnvironmentVariable(\"start-timestamp\", startTimestamp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{xsrf-token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"startTime\": \"{{start-timestamp}}\",\n    \"endTime\": \"{{end-timestamp}}\",\n    \"connection\": {\n        \"applications\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"direction\": \"INBOUND_PLUS_OUTBOUND\",\n        \"portProtocols\": {\n            \"includes\": [],\n            \"excludes\": []\n        }\n    },\n    \"subject\": {\n        \"tags\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"ipAddresses\": {\n            \"includes\": [\n                \"10.201.3.154\"\n            ],\n            \"excludes\": []\n        }\n    },\n    \"peer\": {\n        \"tags\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"ipAddresses\": {\n            \"includes\": [],\n            \"excludes\": []\n        }\n    },\n    \"orientation\": \"EITHER\",\n    \"maxRows\": 50,\n    \"flowCollectors\": [],\n    \"orderBy\": \"TOTAL_BYTES\",\n    \"excludeBpsPps\": true,\n    \"excludeOthers\": true,\n    \"excludeCounts\": false,\n    \"standardOptions\": true\n}"
				},
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants/:tenant-id/flow-reports/top-conversations/queries",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants",
						":tenant-id",
						"flow-reports",
						"top-conversations",
						"queries"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Top Conversations (Status)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					}
				],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants/:tenant-id/flow-reports/top-conversations/queries/:query-id",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants",
						":tenant-id",
						"flow-reports",
						"top-conversations",
						"queries",
						":query-id"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						},
						{
							"key": "query-id",
							"value": "{{query-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Top Conversations (Results)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					}
				],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants/:tenant-id/flow-reports/top-conversations/results/:query-id",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants",
						":tenant-id",
						"flow-reports",
						"top-conversations",
						"results",
						":query-id"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						},
						{
							"key": "query-id",
							"value": "{{query-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Top Ports (Query)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"query-id\", jsonData.data.queryId);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var hoursBack = 24;",
							"",
							"var endTime = new Date();",
							"var startTime = new Date();",
							"startTime.setHours(endTime.getHours() - hoursBack);",
							"",
							"var endTimestamp = endTime.getUTCFullYear() + \"-\" + (\"0\" + (endTime.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + (endTime.getUTCDate())).slice(-2) + \"T\" + (\"0\" + (endTime.getUTCHours())).slice(-2) + \":\" + (\"0\" + (endTime.getUTCMinutes())).slice(-2) + \":\" + (\"0\" + (endTime.getUTCSeconds())).slice(-2) + \".000\";",
							"var startTimestamp = startTime.getUTCFullYear() + \"-\" + (\"0\" + (startTime.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + (startTime.getUTCDate())).slice(-2) + \"T\" + (\"0\" + (startTime.getUTCHours())).slice(-2) + \":\" + (\"0\" + (startTime.getUTCMinutes())).slice(-2) + \":\" + (\"0\" + (startTime.getUTCSeconds())).slice(-2) + \".000\";",
							"",
							"postman.setEnvironmentVariable(\"end-timestamp\", endTimestamp);",
							"postman.setEnvironmentVariable(\"start-timestamp\", startTimestamp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{xsrf-token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"startTime\": \"{{start-timestamp}}\",\n    \"endTime\": \"{{end-timestamp}}\",\n    \"connection\": {\n        \"applications\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"direction\": \"INBOUND_PLUS_OUTBOUND\",\n        \"portProtocols\": {\n            \"includes\": [],\n            \"excludes\": []\n        }\n    },\n    \"subject\": {\n        \"tags\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"ipAddresses\": {\n            \"includes\": [\n                \"10.201.3.154\"\n            ],\n            \"excludes\": []\n        }\n    },\n    \"peer\": {\n        \"tags\": {\n            \"includes\": [],\n            \"excludes\": []\n        },\n        \"ipAddresses\": {\n            \"includes\": [],\n            \"excludes\": []\n        }\n    },\n    \"orientation\": \"EITHER\",\n    \"maxRows\": 50,\n    \"flowCollectors\": [],\n    \"orderBy\": \"TOTAL_BYTES\",\n    \"excludeBpsPps\": true,\n    \"excludeOthers\": true,\n    \"excludeCounts\": false,\n    \"standardOptions\": true\n}"
				},
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants/:tenant-id/flow-reports/top-ports/queries",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants",
						":tenant-id",
						"flow-reports",
						"top-ports",
						"queries"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Top Ports (Status)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					}
				],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants/:tenant-id/flow-reports/top-ports/queries/:query-id",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants",
						":tenant-id",
						"flow-reports",
						"top-ports",
						"queries",
						":query-id"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						},
						{
							"key": "query-id",
							"value": "{{query-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Top Ports (Results)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ""
					}
				],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v1/tenants/:tenant-id/flow-reports/top-ports/results/:query-id",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v1",
						"tenants",
						":tenant-id",
						"flow-reports",
						"top-ports",
						"results",
						":query-id"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "{{tenant-id}}"
						},
						{
							"key": "query-id",
							"value": "{{query-id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cognitive Intelligence Incidents",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/sw-reporting/v2/tenants/:tenant-id/incidents",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"sw-reporting",
						"v2",
						"tenants",
						":tenant-id",
						"incidents"
					],
					"variable": [
						{
							"key": "tenant-id",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{STEALTHWATCH-SMC}}/token",
					"protocol": "https",
					"host": [
						"{{STEALTHWATCH-SMC}}"
					],
					"path": [
						"token"
					]
				},
				"description": "Authenticate"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}